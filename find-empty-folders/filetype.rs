use std::collections::HashMap;

pub struct FileTypes {
    pub ft: HashMap<String, u64>,
    pub uft: HashMap<String, u64>,
    pub known_types: HashMap<String, (Vec<String>, u64)>,
    pub known_cat: HashMap<String, u64>,
    // audio_files: Vec<&'a str>,
    // compressed_files: Vec<&'a str>,
    // media_files: Vec<&'a str>,
    // db_files: Vec<&'a str>,
    // email_files: Vec<&'a str>,
    // exec_files: Vec<&'a str>,
    // font_files: Vec<&'a str>,
    // image_files: Vec<&'a str>,
    // internet_files: Vec<&'a str>,
    // presentation_files: Vec<&'a str>,
    // program_files: Vec<&'a str>,
    // spreadsheet_files: Vec<&'a str>,
    // sys_files: Vec<&'a str>,
    // video_files: Vec<&'a str>,
    // wordprocessor_files: Vec<&'a str>,
    pub others: u64,
}

impl<'a> FileTypes {
    pub fn new() -> Self {
        FileTypes{
            ft: HashMap::from([
            //Audio file formats by file extensions
            (String::from("aif"), 0),
            (String::from("cda"), 0),
            (String::from("mid"), 0),
            (String::from("midi"), 0),
            (String::from("mp3"), 0),
            (String::from("mpa"), 0),
            (String::from("ogg"), 0),
            (String::from("wav"), 0),
            (String::from("wpl"), 0),
            (String::from("arj"), 0),
            //Compressed file extensions
            (String::from("wma"), 0),
            (String::from("7z"), 0),
            (String::from("deb"), 0),
            (String::from("pkg"), 0),
            (String::from("rar"), 0),
            (String::from("rpm"), 0),
            (String::from("tar.gz"), 0),
            (String::from("z"), 0),
            (String::from("zip"), 0),
            //Disc and media file extensions
            (String::from("bin"), 0),
            (String::from("dmg"), 0),
            (String::from("iso"), 0),
            (String::from("toast"), 0),
            (String::from("vcd"), 0),
            //Data and database file extensions
            (String::from("csv"), 0),
            (String::from("dat"), 0),
            (String::from("db"), 0),
            (String::from("dbf"), 0),
            (String::from("log"), 0),
            (String::from("mdb"), 0),
            (String::from("sav"), 0),
            (String::from("sql"), 0),
            (String::from("tar"), 0),
            (String::from("xml"), 0),
            //E-mail file extensions
            (String::from("email"), 0),
            (String::from("eml"), 0),
            (String::from("emlx"), 0),
            (String::from("msg"), 0),
            (String::from("oft"), 0),
            (String::from("ost"), 0),
            (String::from("pst"), 0),
            (String::from("vcf"), 0),
            //Executable file extensions
            (String::from("apk"), 0),
            (String::from("bat"), 0),
            (String::from("bin"), 0),
            (String::from("pl"), 0),
            (String::from("cgi"), 0),    
            (String::from("com"), 0),
            (String::from("exe"), 0),
            (String::from("gadget"), 0),
            (String::from("jar"), 0),
            (String::from("msi"), 0),
            (String::from("py"), 0),
            (String::from("wsf"), 0),
            //Font file extensions
            (String::from("fnt"), 0),
            (String::from("fon"), 0),
            (String::from("otf"), 0),
            (String::from("ttf"), 0),
            //Image file formats by file extension
            (String::from("ai"), 0),
            (String::from("bmp"), 0),
            (String::from("gif"), 0),
            (String::from("ico"), 0),
            (String::from("jpeg"), 0),
            (String::from("jpg"), 0),
            (String::from("png"), 0),
            (String::from("ps"), 0),
            (String::from("psd"), 0),
            (String::from("svg"), 0),
            (String::from("tif"), 0),
            (String::from("tiff"), 0),
            //Internet-related file extensions
            (String::from("asp"), 0),
            (String::from("aspx"), 0),    
            (String::from("cer"), 0),
            (String::from("cfm"), 0),
            (String::from("pl"), 0),
            (String::from("cgi"), 0),    
            (String::from("css"), 0),
            (String::from("htm"), 0),
            (String::from("html"), 0),    
            (String::from("js"), 0),
            (String::from("jsp"), 0),
            (String::from("part"), 0),
            (String::from("php"), 0),
            (String::from("py"), 0),
            (String::from("rss"), 0),
            (String::from("xhtml"), 0),
            //Presentation file formats by file extension
            (String::from("key"), 0),
            (String::from("odp"), 0),
            (String::from("pps"), 0),
            (String::from("ppt"), 0),
            (String::from("pptx"), 0),
            //Programming files by file extensions
            (String::from("c"), 0),
            (String::from("cpp"), 0),
            (String::from("cgi"), 0),
            (String::from("pl"), 0),
            (String::from("class"), 0),
            (String::from("cpp"), 0),
            (String::from("cs"), 0),
            (String::from("h"), 0),
            (String::from("java"), 0),
            (String::from("php"), 0),
            (String::from("py"), 0),
            (String::from("sh"), 0),
            (String::from("swift"), 0),
            (String::from("vb"), 0),
            //Spreadsheet file formats by file extension
            (String::from("ods"), 0),
            (String::from("xls"), 0),
            (String::from("xlsm"), 0),
            (String::from("xlsx"), 0),
            //System related file formats and file extensions
            (String::from("bak"), 0),
            (String::from("cab"), 0),
            (String::from("cfg"), 0),
            (String::from("cpl"), 0),
            (String::from("cur"), 0),
            (String::from("dll"), 0),
            (String::from("dmp"), 0),
            (String::from("drv"), 0),
            (String::from("icns"), 0),
            (String::from("ico"), 0),
            (String::from("ini"), 0),
            (String::from("lnk"), 0),
            (String::from("msi"), 0),
            (String::from("sys"), 0),
            (String::from("tmp"), 0),
            //Video file formats by file extension
            (String::from("3g2"), 0),
            (String::from("3gp"), 0),
            (String::from("avi"), 0),
            (String::from("flv"), 0),
            (String::from("h264"), 0),
            (String::from("m4v"), 0),
            (String::from("mkv"), 0),
            (String::from("mov"), 0),
            (String::from("mp4"), 0),
            (String::from("mpg"), 0),
            (String::from("mpeg"), 0),
            (String::from("rm"), 0),
            (String::from("swf"), 0),
            (String::from("vob"), 0),
            (String::from("wmv"), 0),
            //Word processor and text file formats by file extension
            (String::from("doc"), 0),
            (String::from("docx"), 0),
            (String::from("odt"), 0),
            (String::from("pdf"), 0),
            (String::from("rtf"), 0),
            (String::from("tex"), 0),
            (String::from("txt"), 0),
            (String::from("wpd"), 0),
            ]),
            uft: HashMap::new(),
            known_types: HashMap::from([
                (String::from("audio_files"), (vec![
                String::from("aif"),
                String::from("cda"),
                String::from("mid"),
                String::from("midi"),
                String::from("mp3"),
                String::from("mpa"),
                String::from("ogg"),
                String::from("wav"),
                String::from("wpl"),
                String::from("wma"),
                ], 0)),
                (String::from("compressed_files"), (vec![
                String::from("7z"),
                String::from("arj"),
                String::from("deb"),
                String::from("pkg"),
                String::from("rar"),
                String::from("rpm"),
                String::from("tar.gz"),
                String::from("z"),
                String::from("zip"),
                ], 0)),
                (String::from("media_files"), (vec! [     
                String::from("bin"),
                String::from("dmg"),
                String::from("iso"),
                String::from("toast"),
                String::from("vcd"),
                ], 0)),
                (String::from("db_files"), (vec! [ 
                String::from("csv"),
                String::from("dat"),
                String::from("db"),
                String::from("dbf"),
                String::from("log"),
                String::from("mdb"),
                String::from("sav"),
                String::from("sql"),
                String::from("tar"),
                String::from("xml"),
                ], 0)),
                (String::from("email_files"), (vec! [
                String::from("email"),
                String::from("eml"),
                String::from("emlx"),
                String::from("msg"),
                String::from("oft"),
                String::from("ost"),
                String::from("pst"),
                String::from("vcf"),
                ], 0)),
                (String::from("exec_files"), (vec! [    
                String::from("apk"),
                String::from("bat"),
                String::from("bin"),
                String::from("pl"),
                String::from("cgi"),    
                String::from("com"),
                String::from("exe"),
                String::from("gadget"),
                String::from("jar"),
                String::from("msi"),
                String::from("py"),
                String::from("wsf"), 
                ], 0)),
                (String::from("font_files"), (vec! [
                String::from("fnt"),
                String::from("fon"),
                String::from("otf"),
                String::from("ttf"),
                ], 0)),
                (String::from("image_files"), (vec! [
                String::from("ai"),
                String::from("bmp"),
                String::from("gif"),
                String::from("ico"),
                String::from("jpeg"),
                String::from("jpg"),
                String::from("png"),
                String::from("ps"),
                String::from("psd"),
                String::from("svg"),
                String::from("tif"),
                String::from("tiff"),
                ], 0)),
                (String::from("internet_files"), (vec! [
                String::from("asp"),
                String::from("aspx"),    
                String::from("cer"),
                String::from("cfm"),
                String::from("pl"),
                String::from("cgi"),    
                String::from("css"),
                String::from("htm"),
                String::from("html"),    
                String::from("js"),
                String::from("jsp"),
                String::from("part"),
                String::from("php"),
                String::from("py"),
                String::from("rss"),
                String::from("xhtml"),
                ], 0)),
                (String::from("presentation_files"), (vec! [
                String::from("key"),
                String::from("odp"),
                String::from("pps"),
                String::from("ppt"),
                String::from("pptx"),
                ], 0)),
                (String::from("program_files"), (vec! [
                String::from("c"),
                String::from("cpp"),
                String::from("cgi"),
                String::from("pl"),
                String::from("class"),
                String::from("cpp"),
                String::from("cs"),
                String::from("h"),
                String::from("java"),
                String::from("php"),
                String::from("py"),
                String::from("sh"),
                String::from("swift"),
                String::from("vb"),
                ], 0)),
                (String::from("spreadsheet_files"), (vec! [
                String::from("ods"),
                String::from("xls"),
                String::from("xlsm"),
                String::from("xlsx"),
                ], 0)),
                (String::from("sys_files"), (vec! [
                String::from("bak"),
                String::from("cab"),
                String::from("cfg"),
                String::from("cpl"),
                String::from("cur"),
                String::from("dll"),
                String::from("dmp"),
                String::from("drv"),
                String::from("icns"),
                String::from("ico"),
                String::from("ini"),
                String::from("lnk"),
                String::from("msi"),
                String::from("sys"),
                String::from("tmp"),
                ], 0)),
                (String::from("video_files"), (vec! [
                String::from("3g2"),
                String::from("3gp"),
                String::from("avi"),
                String::from("flv"),
                String::from("h264"),
                String::from("m4v"),
                String::from("mkv"),
                String::from("mov"),
                String::from("mp4"),
                String::from("mpg"),
                String::from("mpeg"),
                String::from("rm"),
                String::from("swf"),
                String::from("vob"),
                String::from("wmv"),
                ], 0)),
                (String::from("wordprocessor_files"), (vec! [
                String::from("doc"),
                String::from("docx"),
                String::from("odt"),
                String::from("pdf"),
                String::from("rtf"),
                String::from("tex"),
                String::from("txt"),
                String::from("wpd"),
                ], 0)),
            ]),
            known_cat: HashMap::from([
                //Audio file formats by file extensions
                (String::from("audio_files"), 0),
                (String::from("compressed_files"), 0),
                (String::from("media_files"), 0),
                (String::from("db_files"), 0),
                (String::from("email_files"), 0),
                (String::from("exec_files"), 0),
                (String::from("font_files"), 0),
                (String::from("image_files"), 0),
                (String::from("internet_files"), 0),
                (String::from("presentation_files"), 0),
                (String::from("program_files"), 0),
                (String::from("spreadsheet_files"), 0),
                (String::from("sys_files"), 0),
                (String::from("video_files"), 0),
                (String::from("wordprocessor_files"), 0),
            ]),
            others: 0,
        }   
    }

    pub fn inc(& mut self, ext: String) -> () {
        let res = self.ft.get_mut(&ext);
        match res {
            Some(val) => {
                *val = *val + 1;
                self.inc_category(ext);
            },
            None => {
                self.uft.insert(ext, 1);
                self.others += 1;
            }
        }
    }

    fn inc_category(&mut self, ext: String ){
        for (k, (x, y)) in &mut self.known_types{
            if x.contains(&ext) {
                *y = 1 + *y;
                *self.known_cat.get_mut(k).unwrap() += 1;
                break;
            }
        }
    }
}
